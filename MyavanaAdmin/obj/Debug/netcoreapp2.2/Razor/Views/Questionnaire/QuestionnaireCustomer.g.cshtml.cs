#pragma checksum "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c18cc1b0fb06a8b4ad309989c8c06a1e152fb78b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Questionnaire_QuestionnaireCustomer), @"mvc.1.0.view", @"/Views/Questionnaire/QuestionnaireCustomer.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Questionnaire/QuestionnaireCustomer.cshtml", typeof(AspNetCore.Views_Questionnaire_QuestionnaireCustomer))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\_ViewImports.cshtml"
using MyavanaAdmin;

#line default
#line hidden
#line 2 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\_ViewImports.cshtml"
using MyavanaAdmin.Models;

#line default
#line hidden
#line 4 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml"
using DataTables.AspNetCore.Mvc;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c18cc1b0fb06a8b4ad309989c8c06a1e152fb78b", @"/Views/Questionnaire/QuestionnaireCustomer.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e50bf59ee35ef0f48e0d229ad9de8458361f9630", @"/Views/_ViewImports.cshtml")]
    public class Views_Questionnaire_QuestionnaireCustomer : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<MyavanaAdminModels.QuestionnaireCustomerList>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/loader.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 6 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(331, 2716, true);
            WriteLiteral(@"

<style>
    .alert-success, .alert-danger, .alert-info {
        top: 110px !important;
        width: 60% !important;
        margin: 0 auto;
        z-index: 99;
        position: fixed;
        left: 50%;
        transform: translateX(-40%);
        text-align: center;
        padding: 12px;
        transition: all 1s linear;
        box-shadow: 0px 0px 12px 3px rgba(0, 0, 0, 0.2);
        font-size: 16px;
    }

    .alert-danger {
        color: #80172a;
        background-color: #fdd5dc;
        border-color: #fcc4ce;
    }

        .alert-danger hr {
            border-top-color: #fbacba;
        }

        .alert-danger .alert-link {
            color: #550f1c;
        }

    .alert-success {
        color: #1c6356;
        background-color: #a8ffc3;
        border-color: #13b755;
    }

        .alert-success hr {
            border-top-color: #b4e7dd;
        }

        .alert-success .alert-link {
            color: #113b33;
        }

    .preloader ");
            WriteLiteral(@"{
        width: calc(100% - 200px);
        height: 100%;
        top: 0px;
        position: fixed;
        z-index: 99999;
        background: rgba(255, 255, 255, .8);
    }

        .preloader img {
            position: absolute;
            LEFT: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 80px;
        }

    .loader {
        overflow: visible;
        padding-top: 2em;
        height: 0;
        width: 2em;
    }

    span.align-right {
        text-align: right;
    }

    .addnewbtn {
        padding: 20px 10px 0;
    }

    i.fa.fa-pencil {
        color: #1ab394;
        background: #e2e2e2;
        padding: 7px;
        border-radius: 4px;
    }

        i.fa.fa-pencil:hover {
            background: #cecece
        }

    i.fa.fa-trash:hover {
        background: #cecece
    }

    i.fa.fa-trash {
        color: red;
        background: #e2e2e2;
        padding: 7px;
        border-radius: 4px;
 ");
            WriteLiteral(@"       margin-top: 10px;
    }

    div#QuestionnaireCustomerList_filter input[type=search] {
        border: 1px solid #ccc;
    }

    i.fa.fa-pencil {
        color: #1ab394;
    }

    i.fa.fa-trash {
        color: red;
    }

    tr.odd td {
        background: #f8f8f8 !important;
    }

    tr.odd:hover td, tr.even:hover td {
        background: #eee !important;
    }

    tr.even td {
        background: #fff !important;
    }

    .viewuser {
        background: #eee;
        padding: 5px 7px;
        border-radius: 4px;
        border: 1px solid #ccc;
        margin-top: 5px;
        color: #1ab394;
    }
</style>
");
            EndContext();
#line 143 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml"
 if (HttpContextAccessor.HttpContext.Request.Cookies["UserType"].ToString() == "False")
{

#line default
#line hidden
            BeginContext(3139, 103, true);
            WriteLiteral("    <div class=\"addnewbtn\">\r\n        <span class=\"align-right\">\r\n            <a class=\"btn btn-primary\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 3242, "\"", 3298, 1);
#line 147 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml"
WriteAttributeValue("", 3249, Url.Action("CreateNewCustomer", "Questionnaire"), 3249, 49, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3299, 52, true);
            WriteLiteral(">Add New Customer</a>\r\n        </span>\r\n    </div>\r\n");
            EndContext();
#line 150 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml"
}

#line default
#line hidden
            BeginContext(3354, 663, true);
            WriteLiteral(@"    <div id=""alert-success"" class=""alert alert-success alert-dismissible"" style=""display:none; width:50%"" data-keyboard=""false"" data-backdrop=""static"">
        <a href=""#"" class=""close"" data-dismiss=""alert"" aria-label=""close"">&times;</a>
        <span id=""successMessage""></span>
    </div>
    <div class=""alert alert-danger alert-dismissible"" style=""display:none; width:50%"" data-keyboard=""false"" data-backdrop=""static"">
        <a href=""#"" class=""close"" data-dismiss=""alert"" aria-label=""close"">&times;</a>
        <span id=""failureMessage""></span>
    </div>
    <div class=""preloader"" style=""display:none;"">
        <div class=""loader"">
            ");
            EndContext();
            BeginContext(4017, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c18cc1b0fb06a8b4ad309989c8c06a1e152fb78b8893", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4050, 1397, true);
            WriteLiteral(@"
        </div>
    </div>
    <div class=""wrapper wrapper-content animated fadeInRight"">
        <div class=""row"">
            <div class=""col-lg-12"">
                <div class=""ibox "">
                    <div class=""ibox-title"">
                        <h5>Customers</h5>
                        <div class=""ibox-tools"">
                            <a class=""collapse-link"">
                                <i class=""fa fa-chevron-up""></i>
                            </a>
                            <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">
                                <i class=""fa fa-wrench""></i>
                            </a>
                            <ul class=""dropdown-menu dropdown-user"">
                                <li>
                                    <a href=""#"" class=""dropdown-item"">Config option 1</a>
                                </li>
                                <li>
                                    <a href=""#"" class=""dropdown-item"">Con");
            WriteLiteral(@"fig option 2</a>
                                </li>
                            </ul>
                            <a class=""close-link"">
                                <i class=""fa fa-times""></i>
                            </a>
                        </div>
                    </div>
                    <div class=""ibox-content"">

                        ");
            EndContext();
            BeginContext(5449, 1017, false);
#line 192 "D:\Work2022\My Avana\MyavanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Questionnaire\QuestionnaireCustomer.cshtml"
                    Write(Html.Ext().Grid<MyavanaAdminModels.QuestionnaireCustomerList>
                        ().Name("QuestionnaireCustomerList")
                        .Columns(cols =>
                        {
                        cols.Add(c => c.UserName).Title("User Name");
                        cols.Add(c => c.UserEmail).Title("User Email");
                        cols.Add(c => c.UserId).Render(() => "onRenderId");
                        cols.Add(c => c.UserId).Render(() => "onRenderCustomerMsg").Title("Message");
                        cols.Add(c => c.UserId).Render(() => "onRenderViewCustomerMsg");
                        })

                        .ServerSide(false)
                        .Ordering(false)
                        .Paging(true)
                        .Searching(true)
                        .Info(false)
                        .DataSource(c =>
                        c.Ajax().Url("QuestionnaireCustomerList").Method("Get")
                        )
                        );

#line default
#line hidden
            EndContext();
            BeginContext(6467, 10960, true);
            WriteLiteral(@"

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class=""modal fade"" id=""confirmModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""confirmModal"" aria-hidden=""true"" data-keyboard=""false"" data-backdrop=""static"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 id=""confirmModalHeader"" class=""font-bold"">Delete</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <span id=""confirmModalText""></span>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" id=""cancelMethod"" data-dismiss=""modal"">Cancel</button>
                    <b");
            WriteLiteral(@"utton type=""button"" class=""btn btn-primary"" id=""confirmMethod"">Save</button>
                </div>
            </div>
        </div>
    </div>
    <div class=""modal fade"" id=""sendCustomerMessage"" tabindex=""-1"" role=""dialog"" aria-labelledby=""sendCustomerMessage"" aria-hidden=""true"" data-keyboard=""false"" data-backdrop=""static"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h4 id=""headerText"" class=""font-bold"">Send Message</h4>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body p-3"">
                    <div class=""row"">
                        <div class=""col-lg-12"">
                            <label class=""w-100"">Subject*:</label>
                        </div>
                       ");
            WriteLiteral(@" <div class=""col-lg-12 mb-3"">
                            <div class=""field-style "">
                                <div class3=""wrap-input100 login-form-style border-0"">
                                    <input type=""text"" id=""txtSubject"" class=""p-2 w-100"" value=""Your HHCP has been updated"">
                                    <span class=""text-danger mt-2 d-block"" id=""subjectValidation"">
                                        <span id=""subjectError""></span>
                                    </span>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class=""row"">
                        <div class=""col-lg-12 "">
                            <label class=""w-100"">Message*:</label>
                        </div>
                        <div class=""col-lg-12 mb-3"">
                            <div class=""field-style "">
                                <div class=""wrap-input100 login-form");
            WriteLiteral(@"-style border-0"">
                                    <textarea id=""txtMessageText"" class=""p-2 w-100"" rows=""3"" value=""hello""></textarea>
                                    <span class=""text-danger"" id=""messageValidation"">
                                        <span id=""messageError""></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-lg-12"">
                            <label class=""w-100"">Attachments</label>
                        </div>
                        <div class=""col-lg-12 m-b-30"">
                            <div class="""">
                                <button id=""btnImageClick"" class=""btn btn-outline-secondary"">Choose file</button>
                                <span id=""selectedImage""></span>
                                <input type=""file"" id=""attachmentFile"" ac");
            WriteLiteral(@"cept=""*"" style=""display:none"" />
                            </div>
                            <div id=""spnFileAttach"" style=""display:none;""></div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-danger"" id=""sendMessage"" onclick=""sendCustomerMessage()"">Send</button>
                    <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        var userId, userEmail, userName, messageData = new FormData(), validMessage = true;
        function onRenderId(data, type, row, meta) {
            var tr;
            if (row.IsQuestionnaire == false)
                tr = '<a href=""/Questionnaire/start/' + row.UserId + '"" Title=""Add QA"" ><img src=""http://admin.myavana.com/images/questionaireAdmin.png""/></i></a>';
            //tr = '<a href=""/Questionnaire/");
            WriteLiteral(@"start/' + row.UserId + '"" Title=""Questionnaire"" ><i class=""fa fa-user viewuser"" aria-hidden=""true""></i></a>';
            else
                tr = '<a href=""/Questionnaire/QuestionaireSurvey?id=update&userId=' + row.UserId + '"" href=""/Questionnaire/start/' + row.UserId + '"" Title=""Update QA"" ><img src=""http://admin.myavana.com/images/QAupdate.png""/></i></a>';
            return tr;
        }
        function onRenderCustomerMsg(data, type, row, meta) {
            var tr;
            var dataArray = new Array();
            dataArray.push(row.UserId);
            dataArray.push(row.UserEmail);
            tr = '<a onclick=""openCustomerMessageModal(\'' + row.UserId + '\',\'' + row.UserEmail + '\',\'' + row.UserName + '\')"" Title=""Send Message"" ><i class=""fa fa-envelope""></i></a>';
            return tr;
        }
        function openCustomerMessageModal(Id, email, name) {
            userId = Id;
            userEmail = email;
            userName = name;
            clearMessageValues();
 ");
            WriteLiteral(@"           $('#sendCustomerMessage').modal('show');
            $('#txtSubject').val(""Your HHCP has been updated"");
            var customerDashboard = ""CLICK HERE"";
            var $anchor = $(""<a/>"")
                .text(customerDashboard)
                .attr(""href"", ""http://customer.myavana.com"" + customerDashboard.substr(1));
            $('#txtMessageText').val(""Hi "" + name + ""!\n This is to inform you that your healthy hair care plan has just been updated! Please CLICK HERE and sign in with your MYAVANA Customer Dashboard credentials to view them. Email support@myavana.com if you have any questions!\nBest regards,\n MYAVANA Support Team"");
        }
        function onRenderViewCustomerMsg(data, type, row, meta) {
            var tr;
            tr = '<a href=""/Questionnaire/CustomerMessages?userId=' + row.UserId + '"" Title=""View Messages"" ><i class=""fa fa-history""></i></a>';
            return tr;
        }
        $(document).ready(function () {
            jQuery('#txtSubject').on('i");
            WriteLiteral(@"nput', function () {
                $(""#subjectError"").text("""");
                $(""#subjectValidation"").removeClass(""field-validation-error"");
            });
            jQuery('#txtMessageText').on('input', function () {
                $(""#messageError"").text("""");
                $(""#messageValidation"").removeClass(""field-validation-error"");
            });
        });
        function clearMessageValues() {
            validMessage = true;
            $('#txtSubject').val("""");
            $('#txtMessageText').val("""");
            $(""#messageError"").text("""");
            $(""#subjectError"").text("""");
            $(""#subjectValidation"").removeClass(""field-validation-error"");
            $(""#messageValidation"").removeClass(""field-validation-error"");
            $('#spnFileAttach').html('');
            $('#spnFileAttach').css('display', 'block');
            messageData = new FormData();
        }

        $('#btnImageClick').click(function () {
            $('#attachmentFile').click(");
            WriteLiteral(@");
        });

        $('#attachmentFile').change(function (event) {
            var filename = event.target.files[0].name;
            if (filename != null || filename != undefined) {
                $('#spnFileAttach').html('');
                $('#spnFileAttach').css('display', 'flex');
                $('#spnFileAttach').append(""<span id="" + filename + "" class='spnAttachment' >"" + filename + ""<i class='fa fa-times' onclick=deleteFile('"" + filename + ""')></i></span>"");
            }
        });

        function sendCustomerMessage() {
            if ($('#txtSubject').val() == '') {
                $(""#subjectValidation"").addClass(""field-validation-error"");
                $(""#subjectError"").text(""Subject required."");
                validMessage = false;
            }
            if ($('#txtMessageText').val() == '') {
                $(""#messageValidation"").addClass(""field-validation-error"");
                $(""#messageError"").text(""Message required."");
                validMessage");
            WriteLiteral(@" = false;
            }
            if (!validMessage) {
                return false;
            }
            var file = $('#attachmentFile').get(0).files[0];

            messageData.append(""UserId"", userId);
            messageData.append(""EmailAddress"", userEmail);
            messageData.append(""Subject"", $('#txtSubject').val());
            messageData.append(""Message"", $('#txtMessageText').val());
            messageData.append(""AttachmentFile"", $('#selectedImage').val());
            messageData.append(""File"", file);
            messageData.append(""UserName"", userName);

            $('.preloader').css('display', 'block');
            $.ajax({
                type: ""POST"",
                url: ""/Questionnaire/SaveCustomerMessage"",
                data: messageData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response == ""1"") {
                        $('#successMessage').text(""M");
            WriteLiteral(@"essage sent successfully !"");
                        $('.alert-success').css(""display"", ""block"");
                        $('.alert-success').delay(3000).fadeOut();
                        $('#sendCustomerMessage').modal('hide');
                    }
                    else {
                        $('#failureMessage').text(""Oops something goes wrong !"");
                        $('.alert-danger').css(""display"", ""block"");
                        $('.alert-danger').delay(3000).fadeOut();
                        $('#sendCustomerMessage').modal('hide');
                    }
                    $('.preloader').css('display', 'none');
                },
            });
        }

    </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MyavanaAdminModels.QuestionnaireCustomerList> Html { get; private set; }
    }
}
#pragma warning restore 1591
